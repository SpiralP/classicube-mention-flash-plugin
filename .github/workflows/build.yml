name: Build

on:
  pull_request:
    branches: [master, main]
  push:
    branches: ["*"]
    tags: ["*"]
  workflow_dispatch:

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write # for uploading release artifacts

jobs:
  linux_nix:
    uses: SpiralP/github-reusable-workflows/.github/workflows/build.yml@c58353d68dbd7c7bd33c8d5bf522f8b31fe04b17 # main

  windows_x86:
    name: Build Windows ${{ matrix.config.arch }}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        config:
          - arch: x86_64
            target: x86_64-pc-windows-msvc
          - arch: i686
            target: i686-pc-windows-msvc

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Install rust
        run: |
          rustup default stable
          rustup component add rustfmt
          rustup target add ${{ matrix.config.target }}

      - name: Build
        if: ${{ startsWith(github.ref, 'refs/tags/') != true }}
        run: |
          cargo build --target ${{ matrix.config.target }}

      - name: Test
        if: ${{ startsWith(github.ref, 'refs/tags/') != true }}
        run: |
          cargo test --target ${{ matrix.config.target }} -- --nocapture --test-threads 1

      - name: Build Release
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          cargo build --target ${{ matrix.config.target }} --release

      - name: Rename files
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          Move-Item `
            -Path 'target\${{ matrix.config.target }}\release\classicube_mention_flash_plugin.dll' `
            -Destination '.\classicube_mention_flash_windows_${{ matrix.config.arch }}.dll'

      - name: Upload Release
        uses: softprops/action-gh-release@d5382d3e6f2fa7bd53cb749d33091853d4985daf # v2
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            classicube_mention_flash_windows_${{ matrix.config.arch }}.dll

  linux_x86:
    name: Build Linux ${{ matrix.config.arch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        config:
          - arch: x86_64
            target: x86_64-unknown-linux-gnu
          - arch: i686
            target: i686-unknown-linux-gnu

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Install x86_64 deps
        if: matrix.config.arch == 'x86_64'
        run: |
          sudo apt-get -y update
          sudo apt-get -y install git gcc g++ build-essential cmake clang pkg-config \
            libx11-dev

      - name: Install i686 deps
        if: matrix.config.arch == 'i686'
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get -y update
          sudo apt-get -y install git gcc g++ build-essential cmake clang pkg-config:i386 \
            gcc-multilib g++-multilib \
            libx11-dev:i386
          echo "PKG_CONFIG_ALLOW_CROSS=1" >> "$GITHUB_ENV"

      - name: Install rust
        run: |
          rustup default stable
          rustup component add rustfmt
          rustup target add ${{ matrix.config.target }}

      - name: Build
        if: ${{ startsWith(github.ref, 'refs/tags/') != true }}
        run: |
          cargo build --target ${{ matrix.config.target }}
          file 'target/${{ matrix.config.target }}/debug/libclassicube_mention_flash_plugin.so'

      - name: Test
        if: ${{ startsWith(github.ref, 'refs/tags/') != true }}
        run: |
          cargo test --target ${{ matrix.config.target }} -- --nocapture --test-threads 1

      - name: Build Release
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          cargo build --target ${{ matrix.config.target }} --release
          file 'target/${{ matrix.config.target }}/release/libclassicube_mention_flash_plugin.so'

      - name: Rename files
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          mv 'target/${{ matrix.config.target }}/release/libclassicube_mention_flash_plugin.so' \
            './classicube_mention_flash_linux_${{ matrix.config.arch }}.so'
          file './classicube_mention_flash_linux_${{ matrix.config.arch }}.so'

      - name: Upload Release
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: softprops/action-gh-release@d5382d3e6f2fa7bd53cb749d33091853d4985daf # v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            classicube_mention_flash_linux_${{ matrix.config.arch }}.so
